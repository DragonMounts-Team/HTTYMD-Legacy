buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        
        classpath fileTree(dir: 'libs', include: '*.jar')
    }
}

apply plugin: 'idea'
idea {
    module {
        inheritOutputDirs = true
    }
}

apply plugin: 'forge'
sourceCompatibility = 1.6
targetCompatibility = 1.6

ext.configFile = file "mod.prop"
configFile.withReader {
    // Load config. Can be referenced as config
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

version = config.mcversion+"-"+config.forgeversion+"F-"+config.modversion //"1.7.10-10.13.2.1230F-1.0.2R"
group= "com.httymd" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "HTTYMD"

minecraft {
    version = config.mcversion+"-"+config.forgeversion //"1.7.10-10.13.2.1230"
    runDir = "minecraft"
}


sourceSets {
    main {
        java { srcDir 'java' }
        resources { srcDir 'resources' include('**') }
    }
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        // replace version and mcversion
        expand 'version':config.modversion, 'mcversion':config.mcversion
    }
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

jar {
    //Place jar into distribution folder
    destinationDir = file 'releases'
    //Keep the jar as clean as possible
    includeEmptyDirs = false
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}


